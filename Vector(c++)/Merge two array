#include<bits/stdc++.h>
using namespace std; 
vector <int> merge(vector<int> &a1,vector <int> &a2){
    int n=a1.size();
    int m=a2.size();
    vector<int> a3(m+n);
    int i=0,j=0,k=0;
    while(i<n && j<m){
        if(a1[i]<a2[j]){
            a3[k]=a1[i];
            i++;
            //k++;
        }else{
            a3[k]=a2[j];
            j++;
            //k++;
        }
        k++;
    }
    //for remaining elements
    if(i==n){
        while(j<m){
            a3[k]=a2[j];
            j++;
            k++;
        }
    }
    if(j==m){
        while(i<n){
            a3[k]=a1[i];
            i++;
            k++;
        }
    }
    return a3;
}
int main(){
    vector<int> a1={1,4,5,8,18};
    vector <int> a2={2,3,6,7,10,12,14,16};
    vector<int> v= merge(a1,a2);
    for(int i=0;i<v.size();i++){
        cout<<v[i]<<" ";
    }
    
}  


/////////////////////////////////////////////////

#include <bits/stdc++.h>
using namespace std;

vector<int> merge(const vector<int>& a1, const vector<int>& a2) {
    int n = a1.size(), m = a2.size();
    vector<int> a3(n + m);
    int i = 0, j = 0, k = 0;

    // merge while both have items
    while (i < n && j < m) {
        if (a1[i] <= a2[j]) {       // <= to keep it stable
            a3[k++] = a1[i++];
        } else {
            a3[k++] = a2[j++];
        }
    }

    // copy any leftovers
    while (i < n) a3[k++] = a1[i++];
    while (j < m) a3[k++] = a2[j++];

    return a3;
}

int main() {
    vector<int> a1 = {1, 4, 5, 8};
    vector<int> a2 = {2, 3, 6, 7, 10};
    vector<int> v = merge(a1, a2);
    for (size_t i = 0; i < v.size(); ++i) cout << v[i] << " ";
    // expected: 1 2 3 4 5 6 7 8 10
}
